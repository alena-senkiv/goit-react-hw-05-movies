{"version":3,"file":"static/js/15.1360c6ab.chunk.js","mappings":"8OA2CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,YAAWN,GAF1C,UAIwC,KAF9BO,EAFV,QAIqBC,QAAQC,OAJ7B,iDAOIL,EAAWG,EAAaC,SAP5B,gDASIE,QAAQC,IAAR,MATJ,0DADc,uBAAC,WAAD,wBAadC,KACC,CAACZ,KAGF,8BACGG,GACC,SAAC,EAAAU,YAAD,UACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wCAAgBD,MAChB,uBAAIC,MAFGF,SAOb,yE,qFCnCKF,E,QAAcK,GAAAA,GAAH,4K","sources":["components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/tmdbApi';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const movieReviews = await getReviews(movieId);\n\n        if (movieReviews.results.length === 0) {\n          return;\n        }\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <span> Author: {author}</span>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style-type: disclosure-open;\n  margin-left: 20px;\n\n  & li {\n    margin-bottom: 20px;\n  }\n\n  & li span {\n    font-weight: 500;\n  }\n`;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","movieReviews","results","length","console","log","fetchMovieReviews","ReviewsList","map","id","author","content","styled"],"sourceRoot":""}