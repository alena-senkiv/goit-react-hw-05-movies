{"version":3,"file":"static/js/342.f1f0e068.chunk.js","mappings":"4QAiEA,UA1DmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,OAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAC/BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,2FACER,EAAUF,EAAAA,OAAAA,SADZ,mBAGyBW,EAAAA,EAAAA,iBAAgBL,GAHzC,UAKkC,KAFxBR,EAHV,QAKec,QAAQC,OALvB,uBAMMX,EAAUF,EAAAA,OAAAA,UACVc,EAAAA,GAAAA,KAAW,gCAPjB,0BAWIf,EAAUD,EAAOc,SACjBV,EAAUF,EAAAA,OAAAA,UAZd,kDAcIe,QAAQC,IAAR,MACAd,EAAUF,EAAAA,OAAAA,UAfd,2DALc,sBACTM,GADS,mCAuBdW,KACC,CAACX,IAUJ,OACE,iCACE,SAAC,EAAAY,UAAD,CAAWC,SAVM,SAAAC,GACdA,EAAMC,SACTtB,EAAU,MACVe,EAAAA,GAAAA,KAAW,gCAEbT,EAAgB,CAAEe,MAAAA,OAMfnB,IAAWD,EAAAA,OAAAA,MAAgBC,IAAWD,EAAAA,OAAAA,WAAmB,wBACzDC,IAAWD,EAAAA,OAAAA,UAAkB,SAAC,EAAAsB,OAAD,IAC7BrB,IAAWD,EAAAA,OAAAA,UAAmBF,IAC7B,SAAC,EAAAyB,cAAD,CACEzB,OAAQA,EACR0B,MAAK,iBACLC,cAAejB,KAGnB,SAAC,KAAD,CAAgBkB,SAAS,aAAaC,UAAW,W,0JC5DhD,IAAM3B,EAAS,CACpB4B,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU","sources":["pages/MoviesPage/MoviesPage.jsx","utils/stateMachine.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { MoviesGallery, Loader, SearchBar } from 'components';\nimport { getMoviesSearch } from 'services/tmdbApi';\nimport { Status } from 'utils/stateMachine';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function fetchMovies() {\n      setStatus(Status.PENDING);\n      try {\n        const movies = await getMoviesSearch(searchQuery);\n\n        if (movies.results.length === 0) {\n          setStatus(Status.REJECTED);\n          toast.info('Sorry, no results were found');\n          return;\n        }\n\n        setMovies(movies.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    fetchMovies();\n  }, [searchQuery]);\n\n  const handleSubmit = query => {\n    if (!query.trim()) {\n      setMovies(null);\n      toast.info('Please, enter search query.');\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {status === Status.IDLE || (status === Status.RESOLVED && <></>)}\n      {status === Status.PENDING && <Loader />}\n      {status === Status.RESOLVED && movies && (\n        <MoviesGallery\n          movies={movies}\n          title={`Search results`}\n          locationState={location}\n        />\n      )}\n      <ToastContainer position=\"top-center\" autoClose={2000} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["useState","movies","setMovies","Status","status","setStatus","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","getMoviesSearch","results","length","toast","console","log","fetchMovies","SearchBar","onSubmit","query","trim","Loader","MoviesGallery","title","locationState","position","autoClose","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}